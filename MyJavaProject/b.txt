package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}

	}

	private static void doDir(String[] args) {
		// TODO Auto-generated method stub

	}

	private static void doCopy(String[] args) {
		String src = args[1];
		String dest = args[2];
		try (FileInputStream fin = new FileInputStream(src); FileOutputStream fout = new FileOutputStream(dest);) {
			int aByte;
			while ((aByte = fin.read()) != -1) {
				fout.write(aByte);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
package com.danske.training.io;

import java.io.FileInputStream;
import java.io.FileOutputStream;

public class DosCommands {

	public static void main(String[] args) {
		String command = args[0];
		// System.out.println(command);
		switch (command) {
		case "copy":
			doCopy(args);
			break;
		case "dir":
			doDir(args);
			break;
		default:
			System.out.println("Bad Command!!");
		}